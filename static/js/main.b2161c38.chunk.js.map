{"version":3,"sources":["components/header/header.jsx","components/toggles/toggles.jsx","utils/RandomPassword.js","App.js","index.js"],"names":["Header","className","Toggles","props","type","id","checked","state","upperCase","name","onChange","e","handleCheckbox","for","width","height","viewBox","d","points","lowerCase","RandomPassword","this","characters","length","isUpperCase","isLowerCase","isNumeric","isSymbolic","characterList","min","max","password","i","Math","floor","random","App","newLength","pwd","numeric","symbol","generatePwd","setLength","setLowerCase","setUpperCase","setNumberCase","setSymbol","generate","setState","target","s","value","ref","textarea","textArea","onClick","navigator","clipboard","writeText","strength","step","handleLenghtChange","href","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2161c38.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./header.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"pagetitle\">Password Generator</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./toggles.css\";\r\n\r\nfunction Toggles(props) {\r\n  return (\r\n    <div className=\"toggle-box\">\r\n      <div className=\"toggle1 toggle\">\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"t1\"\r\n          checked={props.state.upperCase}\r\n          className=\"type-toggle\"\r\n          name=\"upperCase\"\r\n          onChange={(e) => props.handleCheckbox(e)}\r\n        />\r\n        <label for=\"t1\" className=\"check\">\r\n          <svg\r\n            width=\"35px\"\r\n            height=\"35px\"\r\n            viewBox=\"0 0 18 18\"\r\n            className=\"toggle-svg\"\r\n          >\r\n            <path d=\"M1,9 L1,3.5 C1,2 2,1 3.5,1 L14.5,1 C16,1 17,2 17,3.5 L17,14.5 C17,16 16,17 14.5,17 L3.5,17 C2,17 1,16 1,14.5 L1,9 Z\"></path>\r\n            <polyline points=\"1 9 7 14 15 4\"></polyline>\r\n          </svg>\r\n        </label>\r\n        <label className=\"toggle-labels\">UpperCase</label>\r\n      </div>\r\n\r\n      <div className=\"toggle2 toggle\">\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"t2\"\r\n          checked={props.state.lowerCase}\r\n          className=\"type-toggle\"\r\n          name=\"lowerCase\"\r\n          onChange={(e) => props.handleCheckbox(e)}\r\n        />\r\n        <label for=\"t2\" className=\"check\">\r\n          <svg\r\n            width=\"35px\"\r\n            height=\"35px\"\r\n            viewBox=\"0 0 18 18\"\r\n            className=\"toggle-svg\"\r\n          >\r\n            <path d=\"M1,9 L1,3.5 C1,2 2,1 3.5,1 L14.5,1 C16,1 17,2 17,3.5 L17,14.5 C17,16 16,17 14.5,17 L3.5,17 C2,17 1,16 1,14.5 L1,9 Z\"></path>\r\n            <polyline points=\"1 9 7 14 15 4\"></polyline>\r\n          </svg>\r\n        </label>\r\n        <label className=\"toggle-labels\">LowerCase</label>\r\n      </div>\r\n\r\n      <div className=\"toggle3 toggle\">\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"t3\"\r\n          className=\"type-toggle\"\r\n          name=\"numeric\"\r\n          onChange={(e) => props.handleCheckbox(e)}\r\n        />\r\n        <label for=\"t3\" className=\"check\">\r\n          <svg\r\n            width=\"35px\"\r\n            height=\"35px\"\r\n            viewBox=\"0 0 18 18\"\r\n            className=\"toggle-svg\"\r\n          >\r\n            <path d=\"M1,9 L1,3.5 C1,2 2,1 3.5,1 L14.5,1 C16,1 17,2 17,3.5 L17,14.5 C17,16 16,17 14.5,17 L3.5,17 C2,17 1,16 1,14.5 L1,9 Z\"></path>\r\n            <polyline points=\"1 9 7 14 15 4\"></polyline>\r\n          </svg>\r\n        </label>\r\n        <label className=\"toggle-labels\">Digits</label>\r\n      </div>\r\n\r\n      <div className=\"toggle4 toggle\">\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"t4\"\r\n          className=\"type-toggle\"\r\n          name=\"symbol\"\r\n          onChange={(e) => props.handleCheckbox(e)}\r\n        />\r\n        <label for=\"t4\" className=\"check\">\r\n          <svg\r\n            width=\"35px\"\r\n            height=\"35px\"\r\n            viewBox=\"0 0 18 18\"\r\n            className=\"toggle-svg\"\r\n          >\r\n            <path d=\"M1,9 L1,3.5 C1,2 2,1 3.5,1 L14.5,1 C16,1 17,2 17,3.5 L17,14.5 C17,16 16,17 14.5,17 L3.5,17 C2,17 1,16 1,14.5 L1,9 Z\"></path>\r\n            <polyline points=\"1 9 7 14 15 4\"></polyline>\r\n          </svg>\r\n        </label>\r\n        <label className=\"toggle-labels\">Symbols</label>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Toggles;\r\n","export class RandomPassword {\r\n  constructor() {\r\n    this.characters = \"\";\r\n  }\r\n  setLength(length) {\r\n    this.length = length;\r\n    return this;\r\n  }\r\n  setUpperCase(isUpperCase) {\r\n    if (isUpperCase) {\r\n      this.characters += \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n    }\r\n    return this;\r\n  }\r\n  setLowerCase(isLowerCase) {\r\n    if (isLowerCase) {\r\n      this.characters += \"abcdefghijklmnopqrstuvwxyz\";\r\n    }\r\n    return this;\r\n  }\r\n  setNumberCase(isNumeric) {\r\n    if (isNumeric) {\r\n      this.characters += \"0123456789\";\r\n    }\r\n    return this;\r\n  }\r\n  setSymbol(isSymbolic) {\r\n    if (isSymbolic) {\r\n      this.characters += \"!@$%^&*()<>,.?/[]{}-=_+\";\r\n    }\r\n    return this;\r\n  }\r\n  generate() {\r\n    let characterList = this.characters;\r\n    if (characterList.length <= 0) {\r\n      return \"May'be you're in search of unknown! Keep looking\";\r\n    }\r\n    var password = \"\";\r\n    for (let i = 0; i < this.length; ++i) {\r\n      password += characterList[getRandomInt(0, characterList.length - 1)];\r\n    }\r\n    return password;\r\n  }\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n","import \"./assests/css/App.css\";\nimport \"./assests/css/slider.css\";\nimport Header from \"./components/header/header.jsx\";\nimport Toggles from \"./components/toggles/toggles.jsx\";\nimport { RandomPassword } from \"./utils/RandomPassword\";\nimport { Component } from \"react\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      length: 8,\n      newLength: 8,\n      pwd: \"\",\n      upperCase: true,\n      lowerCase: true,\n      numeric: false,\n      symbol: false,\n    };\n  }\n\n  componentDidMount() {\n    this.generatePwd();\n  }\n\n  generatePwd() {\n    const { upperCase, lowerCase, numeric, symbol, length } = this.state;\n    let pwd = new RandomPassword()\n      .setLength(length)\n      .setLowerCase(lowerCase)\n      .setUpperCase(upperCase)\n      .setNumberCase(numeric)\n      .setSymbol(symbol)\n      .generate();\n    this.setState({ pwd });\n  }\n\n  handleCheckbox(e) {\n    const { name, checked } = e.target;\n\n    this.setState(\n      {\n        [name]: checked,\n      },\n      () => this.generatePwd()\n    );\n  }\n\n  strength() {\n    let s = this.state.length;\n    if (s > 30) return \"What is this monstrosity?\";\n    else if (s > 20) return \"Very Strong\";\n    else if (s === 10 || s === 11) return \"Fairly Strong Password\";\n    else if (s > 10) return \"Strong Password\";\n    else if (s > 4) return \"Weak\";\n    else return \"Even a child can predict this\";\n  }\n\n  handleLenghtChange({ target: { value } }) {\n    if (value >= 40) {\n      value = 40;\n    }\n    this.setState({ length: value }, () => this.generatePwd());\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <div className=\"password-generator\">\n          <div className=\"password-output\">\n            <span\n              className=\"password-output-span\"\n              ref={(textarea) => (this.textArea = textarea)}\n            >\n              {this.state.pwd}\n            </span>\n\n            <button\n              className=\"generate-button\"\n              type=\"button\"\n              onClick={() => {\n                this.generatePwd(this.state);\n              }}\n            >\n              Generate\n            </button>\n\n            <button\n              className=\"copy-button\"\n              type=\"button\"\n              onClick={() => {\n                navigator.clipboard.writeText(this.state.pwd);\n              }}\n            >\n              Copy Password\n            </button>\n          </div>\n          <div className=\"slider\">\n            <div className=\"password-strength\">{this.strength()}</div>\n            <div className=\"slider-label\">Length : {this.state.length}</div>\n            <input\n              className=\"length-slider\"\n              type=\"range\"\n              min=\"4\"\n              max=\"40\"\n              step=\"1\"\n              value={this.state.length}\n              onChange={(e) => this.handleLenghtChange(e)}\n            />\n          </div>\n          <div className=\"toggle-div\">\n            <Toggles\n              state={this.state}\n              handleCheckbox={(e) => this.handleCheckbox(e)}\n            />\n          </div>\n        </div>\n        <div className=\"footer\">\n          Made with <i className=\"fas fa-heart heart\"> </i> and React by{\" \"}\n          <a href=\"https://github.com/Arshanshagarwal\" className=\"footer-link\">\n            Arshansh\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}